#!/usr/bin/env Rscript
## Copyright (C) 2008, 2009 Dominik Dahlem <Dominik.Dahlem@cs.tcd.ie>
##
## This file is free software; as a special exception the author gives
## unlimited permission to copy and/or distribute it, with or without
## modifications, as long as this notice is preserved.
##
## This program is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
## implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

## Author: Dominik Dahlem <Dominik.Dahlem@cs.tcd.ie>
## Maintainer: Dominik Dahlem <Dominik.Dahlem@cs.tcd.ie>
## Keywords: graph, analysis, assortativity
## Created: 30.07.2008


# load the library that implements the DES graph analysis methods
library(desGraph)

cl <- NULL

# if it was configured using MPI, load the snow library
if (@HAVE_MPI@) {
  library(snow)
}

message("Start with the simulation!")


if (@HAVE_MPI@) {
  # read the NODEFILE to find out how many nodes are participating in the cluster
  nodes <- read.table("NODEFILE")
  
  # make the cluster
  cl <- makeCluster(length(nodes$V1), type="MPI")

  # load the asianOptionPricing library on each node
  clusterEvalQ(cl, library(desGraph)) 
}


# read the graph to analyse from a file
graphs <- read.table("graphs.dat")

rs <- c()
sigmas <- c()

for (g in graphs$V1) {
  message(paste("Analysing graph", graphs$V1[g], "..."))
  graph <- des.graph.read(paste(graphs$V1[g]))

  # calculate the assortativity value
  r <- des.graph.degree.assortivity(graph)
  rs <- append(rs, r)

  if (is.null(cl)) {
    result <- sapply(0:(length(E(graph)) - 1),
                     des.graph.degree.assortivity.sigma.i,
                     graph=graph,
                     assortativity=r)
  } else {
    # execute in a cluster clusterApplyLB
    result <- parSapply(cl, 0:(length(E(graph)) - 1),
                        des.graph.degree.assortivity.sigma.i,
                        graph=graph,
                        assortativity=r)
  }

  
  sigma <- sum(result)
  sigmas <- append(sigmas, sigma)
}

write.csv(data.frame(graph=graphs$V1, r=rs, sigma=sigmas), "assortativity.dat")

# In case of unexpected program exceptions, clean up the cluster
.Last <- function()
{
  if (@HAVE_MPI@) {
    stopCluster(cl)
  }
}

message("Finished graph analysis.")
