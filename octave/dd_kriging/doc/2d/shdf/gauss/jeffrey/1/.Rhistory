?qplot
p <- ggplot(betaDF, aes(x=tauint, y=rho), xlab="\tau_int")
p + geom_errorbar(limits, width=0.25)
p <- ggplot(betaDF, aes(x=tauint, y=rho), xlab=c(expression(Tau)))
p + geom_errorbar(limits, width=0.25)
p <- ggplot(betaDF, aes(x=tauint, y=rho), xlab=c(expression(Tau), ""))
p + geom_errorbar(limits, width=0.25)
p <- p + layer(geom = "line")
p + geom_errorbar(limits, width=0.25)
limits <- aes(max = max, min = min)
p <- ggplot(betaDF, aes(x=tauint, y=rho))
p <- p + layer(geom = "lines")
p <- p + layer(geom = "line")
p + geom_errorbar(limits, width=0.25)
p <- p + layer(geom = "line")
p + geom_errorbar(limits, width=0.25)
p <- ggplot(betaDF, aes(x=tauint, y=rho), xlab=expression(tau))
p <- p + layer(geom = "line")
p + geom_errorbar(limits, width=0.25)
?ggplot
rm(list=ls())
ls()
?plotmath
p <- ggplot(betaDF, aes(x=tauint, y=rho), xlab=expression(beta))
p
p <- p + layer(geom = "line")
p
require(graphics)
p
p <- ggplot(betaDF, aes(x=tauint, y=rho), xlab=paste("",expression(beta)))
p <- p + layer(geom = "line")
p
p <- ggplot(betaDF, aes(x=tauint, y=rho), title=paste("",expression(beta)))
p <- p + layer(geom = "line")
p
p + scale_x_continuous("bla")
p + scale_x_continuous(expression(tau))
p + scale_x_continuous(expression(tau[int]))
p + scale_x_continuous(paste(expression(tau[int]), "with statistical errors of mass"))
p + scale_x_continuous(expression(tau[int], "with statistical errors of mass"))
p + scale_x_continuous(expression(paste(tau[int], "with statistical errors of mass")))
p
p + scale_y_continuous(expression(rho))
p + scale_y_continuous(expression(rho))
p + scale_y_continuous(expression(rho), breaks=c(-0.5, 0, 0.5, 1))
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.eps")
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.eps")
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.pdf")
qplot(p)
ggplot(p)
p
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.eps")
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.pdf")
print(p)
?print
?device
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.pdf")
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.eps")
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.eps")
dev.off()
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.eps")
?ggplot.print
?print.ggplot
?ggplot_print
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.eps")
des.kriging.mcmc.autocorr.plot("2d-shdf-normalised-autocorr-mass-beta.eps")
des.kriging.mcmc.tauintvsw.plot("2d-shdf-tauint_vs_w-beta.eps")
des.kriging.mcmc.tauintvsw.plot("2d-shdf-tauint_vs_w-beta.eps")
dev.off
dev.off()
des.kriging.mcmc.tauintvsw.plot("2d-shdf-tauint_vs_w-beta.eps")
paste("bla", "tra")
paste("bla", "tra", sep="")
name <- beta
chain <- read.csv(paste("2d-shdf-chain-", name, ".dat", sep=""), header=TRUE)
chain <- read.table(paste("2d-shdf-chain-", name, ".dat", sep=""), header=TRUE)
ls()
paste("2d-shdf-chain-", name, ".dat", sep = "")
paste("2d-shdf-chain-", "", ".dat", sep = "")
name
chname="beta)
"
chname="beta"
chname
chain <- read.table(paste("2d-shdf-chain-", chname, ".dat", sep=""), header=TRUE)
summary(chain)
chain <- read.table(paste("2d-shdf-chain-", chname, ".dat", sep=""), header=TRUE)
summary(chain)
chain <- read.table(paste("2d-shdf-chain-", chname, "-mean.dat", sep=""), header=TRUE)
des.kriging.mcmc.beta.mean.plot()
prefix="2d-shdf"
chain <- read.table(paste(prefix, "-chain-beta-mean.dat", sep=""), header=TRUE)
summary(chain)
length(chain)
length(chain$mean_beta)
p <- ggplot(chain, aes(y=mean_beta))
p
p <- ggplot(chain$mean_beta)
df <- data.frame(mean=chain$mean_beta)
summary(df)
p <- ggplot(df, aes(y=mean))
p <- p + layer(geom = "line")
p
p
df$mean
p
summary(df)
p
dev.off()
p
des.kriging.mcmc.sigma.mean.plot(ps=FALSE)
prefix
des.kriging.mcmc.sigma.mean.plot(ps=FALSE)
summary(chain)
summary(df)
dev.off()
p
des.kriging.mcmc.beta.mean.plot()
1:4
1:length(df$meanbeta)
rm(list=ls())
des.kriging.mcmc.beta.mean.plot(ps=FALSE)
des.kriging.mcmc.beta.mean.plot(ps=FALSE)
dev.off()
dev.off()
des.kriging.mcmc.beta.mean.plot(ps=FALSE)
des.kriging.mcmc.beta.mean.plot(ps=FALSE)
des.kriging.mcmc.beta.mean.plot(ps=FALSE)
dev.off()
des.kriging.mcmc.beta.mean.plot(ps=FALSE)
des.kriging.mcmc.sigma.mean.plot(ps=FALSE)
?read.table
idx=1
prefix="2d-shdf"
summary(df)
?mathplot
?plotmath
des.kriging.mcmc.theta.mean.plot(idx="2", ps=FALSE)
des.kriging.mcmc.mean.plot()
des.kriging.mcmc.theta.mean.plot <- function(prefix="2d-shdf", idx="1", ps=TRUE) {
  if (ps) {
    postscript(paste(prefix, "-chain-theta", idx, "-mean.eps", sep=""), onefile=FALSE)
  }

  chain <- read.table(paste(prefix, "-chain-theta", idx, "-mean.dat", sep=""),
                      header=TRUE, col.names=c("theta"))
  df <- data.frame(x=1:length(chain$theta), y=chain$theta)
  p <- ggplot(df, aes(x=x, y=y))
  p <- p + layer(geom = "line")
  p <- p + scale_y_continuous(substitute(theta[I], list(I = idx)))
  p <- p + scale_x_continuous("")
  print(p)
  
  if (ps) {
    dev.off()
  }
}
des.kriging.mcmc.mean.plot()
des.kriging.mcmc.mean.plot()
p
dev.off()
dev.off()
p
p + theme_bw()
p + theme_bw()
q()
n
